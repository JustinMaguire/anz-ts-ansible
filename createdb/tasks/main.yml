---

- name: Install PostgreSQL
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - bash
    - openssl
    - openssl-devel
    - postgresql-server
    - postgresql-contrib
    - postgresql-devel
    - python-psycopg2
    
- name: Postgres Database Init
  shell: /usr/bin/postgresql-setup initdb
  failed_when: no
  changed_when: no
  
- name: Postgres listen all
  lineinfile:
    dest: /var/lib/pgsql/data/postgresql.conf
    regexp: '^(.*)localhost(.*)$'
    line: listen_addresses = '*'

- name: Postgres allow users
  lineinfile:
    dest: /var/lib/pgsql/data/pg_hba.conf
    line: host  all  all 0.0.0.0/0 md5
        
- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=restarted enabled=yes

- name: Ensure database is created
  become: yes
  become_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present

- name: Ensure user has access to the database
  become: yes
  become_user: postgres
  postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password={{ db_password }}
                   priv=ALL
                   state=present

- name: Ensure user does not have unnecessary privileges
  become: yes
  become_user: postgres
  postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present
                   
- name: Create Flight Data big table
  become: yes
  become_user: postgres
  shell: psql -d FlightData --command "DROP TABLE IF EXISTS flightinfo; CREATE TABLE flightinfo (_year INTEGER, _month INTEGER, dayofmonth INTEGER, dayofweek INTEGER, deptime VARCHAR(4), crsdeptime INTEGER, arrtime VARCHAR(4), crsarrtime INTEGER, uniquecarrier VARCHAR(10), flightnum INTEGER, tailnum VARCHAR(7), actualelapsedtime VARCHAR(4), crselapsedtime VARCHAR(6), airtime VARCHAR(6), arrdelay VARCHAR(5), depdelay VARCHAR(5), origin VARCHAR(3), dest VARCHAR(3), distance VARCHAR(6), taxiin VARCHAR(6), taxiout VARCHAR(6), cancelled BOOLEAN, cancellationcode VARCHAR(2), diverted BOOLEAN, carrierdelay VARCHAR(6), weatherdelay VARCHAR(6), nasdelay VARCHAR(6), securitydelay VARCHAR(6), lateaircraftdelay VARCHAR(6)); ALTER TABLE flightinfo OWNER TO flightcontrol;"

- include_tasks: subtasks.yml
  with_items:
  - "1993.csv"
  - "1994.csv"
  - "1995.csv"
  - "1996.csv"
  - "1997.csv"
  - "1998.csv"
  - "1999.csv"
  - "2000.csv"
  loop_control:
    loop_var: filename
  
  